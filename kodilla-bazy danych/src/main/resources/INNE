



CREATE TABLE USERS
(
    ID SERIAL PRIMARY KEY,
    FIRSTNAME VARCHAR(100),
    LASTNAME VARCHAR(100)
);
CREATE TABLE POSTS
(
    ID      SERIAL PRIMARY KEY,
    USER_ID BIGINT UNSIGNED NOT NULL,
    BODY    VARCHAR(1024),
    FOREIGN KEY (USER_ID) REFERENCES USERS (ID)
);
SELECT * FROM USERS;

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('John', 'Smith');
SELECT * FROM USERS;
COMMIT;

INSERT INTO POSTS(USER_ID, BODY) VALUES (2,'FIRST POST ON THIS FORUM');
SELECT * FROM POSTS;
COMMIT;
SELECT * FROM POSTS;

INSERT INTO USERS (FIRSTNAME, LASTNAME) VALUES('ZACHARY','LEE');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Stephanie', 'Kovalsky');

INSERT INTO USERS (FIRSTNAME, LASTNAME)
VALUES ('Thomas', 'Landgren');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'This is my first post too!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (2, 'How are you?');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (1, 'Quite good, thanks bro!');

INSERT INTO POSTS (USER_ID, BODY)
VALUES (4, 'Yo all! Here is Thomas!');

COMMIT;

SELECT * FROM USERS;
SELECT * FROM POSTS;
SELECT * FROM ISSUESLISTS;
SELECT * FROM ISSUES;

CREATE TABLE ISSUESLISTS
(
    ID SERIAL PRIMARY KEY,
    NAME VARCHAR(20)
);
SELECT * FROM ISSUESLISTS;

CREATE TABLE ISSUES
(
    ID SERIAL PRIMARY KEY,
    ISSUELIST_ID BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (ISSUELIST_ID) REFERENCES ISSUESLISTS (ID),
    SUMMARY VARCHAR(20),
    DESCRIPTION VARCHAR(20),
    USER_ID_ASSIGNETEDTO BIGINT UNSIGNED NOT NULL,
    FOREIGN KEY (USER_ID_ASSIGNETEDTO) REFERENCES USERS (ID)

);

INSERT INTO ISSUESLISTS (ID, NAME) VALUES (1,'TODo');
INSERT INTO ISSUESLISTS (ID, NAME) VALUES (2,'In progress');
INSERT INTO ISSUESLISTS (ID, NAME) VALUES (3,'Done');

INSERT INTO ISSUES (ID, ISSUELIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNETEDTO)
VALUES (1,1,'SUMMARY 1','DESCRIPTION 1',1);

INSERT INTO ISSUES (ID, ISSUELIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNETEDTO)
VALUES (2,2,'SUMMARY 2','DESCRIPTION 1 TOO',2);

INSERT INTO ISSUES (ID, ISSUELIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNETEDTO)
VALUES (3,3,'SUMMARY 3','DESCRIPTION 3',3);

INSERT INTO ISSUES (ID, ISSUELIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNETEDTO)
VALUES (4,1,'SUMMARY 4','DESCRIPTION 4',1);

INSERT INTO ISSUES (ID, ISSUELIST_ID, SUMMARY, DESCRIPTION, USER_ID_ASSIGNETEDTO)
VALUES (5,2,'SUMMARY 5','DESCRIPTION 5',4)


    COMMIT;

SELECT ID, LASTNAME FROM USERS;
SELECT ID, FIRSTNAME FROM USERS
WHERE (ID >=4 AND ID <=10)
OR ID = 1;

SELECT COUNT(*) FROM USERS;

SELECT MIN(ID), MAX(ID) FROM USERS;

SELECT SUM(ID ), AVG(ID) FROM USERS;

SELECT  SUM(ID) AS TOTAL, AVG(ID) AS AVERAGE FROM USERS;


SELECT U.FIRSTNAME, U.LASTNAME, P.BODY
FROM USERS U
JOIN POSTS P ON U.ID = P.USER_ID;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID;

SELECT USER_ID_ASSIGNETEDTO, COUNT(*) AS TASK_NUMBER
FROM ISSUES
GROUP BY USER_ID_ASSIGNETEDTO;

SELECT USER_ID, COUNT(*) AS POSTS_NUMBER
FROM POSTS
GROUP BY USER_ID
HAVING COUNT(*) > 1

SELECT U.FIRSTNAME, U.LASTNAME, COUNT(*) AS POSTS_NUMBER
FROM USERS U JOIN POSTS P ON U.ID = P.USER_ID
GROUP BY P.USER_ID
HAVING COUNT(*) > 1;